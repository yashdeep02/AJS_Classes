TypeScript:

    1. Introduction.

    2. Variables     -- JavaScript Variables & TypeScript Variables

    3. functions

    4. classes

    5. destructors

    6. decorators

    7. jsx

    8. memory utilization in typescript

Introduction:

    - TypeScript is the "superset" of javascript.

    - TypeScript released by Microsoft.

    - TypeScript Based on Compiler.

    - TypeScript is the Programming language.

    - "tsc" is the compiler provided by TypeScript.

    - tsc stands for typescript compiler.

    - tsc compiler used to convert the typescript files
      to javascript files

    - we will use typescript to develop "angular2 / angular4" applications.


Installation of TypeScript:
---------------------------
1. download and install the nodejs

website   : https://nodejs.org/en/download/
file name : node-v6.11.2-x64.msi


2. install the typings.

>npm install -g typings

[Note : - TypeScript Installation Depending on NodeJS

        - npm stands for node packaging manager

        - npm is the internal tool of nodejs, used to install the
          softwares like typescript, gulp, yarn, bower....]




[Note : knowing the version of softwares installed

        > node -v

        > npm -v

        execute the above commands on terminal ]




functions in typescript:
------------------------

    - functions are meant for define the business logic.

    - by using functions we can reuse the business logic.


Syntax to create to function in TypeScript:
-------------------------------------------
fun_name(){
    //Logic
}


call the function:
------------------
fun_name();


Ex_1:
        ************************
    greet(){
        return "Welcome to TypeScript functions !";
    }

    var result = greet();
    console.log(result);
        *************************


        *************************
    greet():string{
        return "100";   //TS : 2322
    }
    var result = greet();
    var my_num:number = <number><string>result;
        *************************


        ************************
    fun_one(arg1:number,arg2:number):void{
        console.log(arg1+arg2);
    }

    fun_one;    //it will return the function defination.
    fun_one(10,10);   //20
        *************************


        **************************
    fun_one(arg1:fun_two,arg2:fun_three,arg3:fun_four):void{
            console.log(arg1+"<==>+arg2+"<==>arg3());
    }

    fun_two():string{
        return "Angular4";
    }

    fun_three():string{
        return "NodeJS";
    }

    fun_four():string{
        return "MongoDB";
    }

    fun_one(fun_two(),fun_three(),fun_four);

        *****************************


        *****************************
    fun_one():string{
        //return fun_two();
        return fun_two;
    }


    fun_two():string{
        return "Welcome to TypeScript Functions !";
    }


    var result = fun_one();
    console.log(result);  //Welcome to TypeScript Functions !

    var result = fun_one()();
    console.log(result);  //Welcome to TypeScript Functions !
        ******************************

        ******************************
    fun_one():any{
        return {
            "fun_two":fun_two
        };
    }

    fun_two(){
        return "Welcome !";
    }

    var obj = fun_one();
    var def = obj.fun_two;
    console.log(def());   //Welcome !
        ********************************

        *******************************
    class Test{
        var_one:string;
        fun_one():void{
            this.var_one = "Welcome";
        }
    }

    var obj = new Test();

    console.log(obj.var_one);            //""
    obj.fun_one();
    console.log(obj.var_one);            //Welcome
        *****************************
